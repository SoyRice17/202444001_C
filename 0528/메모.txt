포인터형 변수 = 8바이트 고정

함수 호출시 매개변수 배열 또한 주소값만 가져오는것이기 때문에 8바이트

ex /    int a[];
        add(a);

        int add (int x[]){};
                    ^ 8바이트

int a = 8; (주소값 0x10)
int *p; (주소값 0x30)
p = &a;

a 출력 = 8
&a 출력 = 0x10
p 출력 = 0x10
&p 출력 = 0x30
*p 출력 8
*p = 10;
*p 출력 10

---------------------------
int a[] = {1, 2, 3};

a = &a[0]
*a = a[0]
*(a+1) = a[1]

---------------------------
int a = 10;
int *p = NULL;

p= &a;

b = *p++; / a값 b에 대입후 주소값 1 증가 
b = (*p)++; / a값 b에 대입후 a 1증가

-----------------------------
int a[] = { 100, 200 , 300};
int *p + NULL;

p = a;

printf("%d",*p++); / 100 출력 다음 다음 출력에는 200 출력될것
printf("%d",(*p)++); / 100 출력 다음 다음 출력에는 101 출력될것
printf("%d",*++p); / 200 출력 
printf("%d",++*p); / 101 출력

----------------------------
for (int i = 0; i < size; i++) {
    printf("%d", a[i]) <- 기존 방식
    printf("%d", *(a+i)) <- 포인터 방식
}

----------------------------
for (int i = 0; i < size; i+=){
    hap += arr[i]; <- 기존방식
    hap += *arr++; <- 포인터 방식
}